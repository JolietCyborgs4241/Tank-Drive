// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
#include "OI.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

#include "Subsystems/DriveTrain.h"
#include "SmartDashboard/SmartDashboard.h"
using namespace frc;


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
OI::OI() {
	// Process operator interface input here.
	pi = 3.141592653589793238462643383279;
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	
	driverJoystickLeft = new Joystick(0); //Xbox
	driverJoystickRight = new Joystick (1);

	a = new JoystickButton(driverJoystickLeft, 1);
	b = new JoystickButton(driverJoystickLeft, 2);
	xb = new JoystickButton(driverJoystickLeft, 3);
	y = new JoystickButton(driverJoystickLeft, 4);
	lb = new JoystickButton(driverJoystickLeft, 5);
	rb = new JoystickButton(driverJoystickLeft, 6);
	back = new JoystickButton(driverJoystickLeft, 7);
	start = new JoystickButton(driverJoystickLeft, 8);
	//^Xbox^

	sq = new JoystickButton(driverJoystickRight, 1);
	xp = new JoystickButton(driverJoystickRight, 2);
	circle = new JoystickButton(driverJoystickRight, 3);
	tri = new JoystickButton(driverJoystickRight, 4);
	l1 = new JoystickButton(driverJoystickRight, 5);
	r1 = new JoystickButton(driverJoystickRight, 6);
	l2 = new JoystickButton(driverJoystickRight, 7);
	r2 = new JoystickButton(driverJoystickRight, 8);
	shr = new JoystickButton(driverJoystickRight, 9);
	opt = new JoystickButton(driverJoystickRight, 10);
	l3 = new JoystickButton(driverJoystickRight, 11);
	r3 = new JoystickButton(driverJoystickRight, 12);
	ps = new JoystickButton(driverJoystickRight, 13);
	pad = new JoystickButton(driverJoystickRight, 14);
	//^PS4^





//^ps4^


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	//cout << "OI Constructor Complete" << endl;
}
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
Joystick* OI::GetJoystick(){
	return driverJoystickRight;
}
Joystick* OI::getDriverJoystickLeft() { //xbox
	return driverJoystickLeft;
}
Joystick* OI::getDriverJoystickRight() { //ps4
	return driverJoystickRight;
}
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
bool OI::getL1()
{
	return driverJoystickRight->GetRawButton(5);
}
double OI::getJoystickMagnitude() {
	if(driverJoystickRight->GetMagnitude() < .1)
		return 0;
	else
		if (driverJoystickRight->GetY()<0)
			return -driverJoystickRight->GetMagnitude();
		else
			return driverJoystickRight->GetMagnitude();
}
double OI::getJoystickZ() {
	if(fabs(driverJoystickRight->GetZ()) < .1)
			return 0;
	else
		return driverJoystickRight->GetZ();
}
double OI::getJoystickX() {
	Xjoy = driverJoystickRight->GetX();
	Xadj = pow(Xjoy, 3);
	if (fabs(Xadj) < 0)
		return 0;
	else
		return Xadj;
}
double OI::getJoystickY() {
	Yjoy = driverJoystickRight->GetY();
	Yadj = pow(Yjoy, 3);
	if (fabs(Yadj) < 0)
		return 0;
	else
		return Yadj;
}

